{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyP6zche6zafPCBhnHvlCIW1"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"lnsYutVbYiSi"},"outputs":[],"source":["import streamlit as st\n","import pandas as pd\n","import numpy as np\n","import pickle\n","import plotly.express as px\n","from sklearn.preprocessing import StandardScaler\n","\n","# Load the trained model\n","model = pickle.load(open(\"best_model.pkl\", \"rb\"))\n","\n","# Streamlit UI Setup\n","st.set_page_config(page_title=\"Jewelry Price Prediction\", layout=\"wide\")\n","\n","# ---- Header ----\n","st.image(\"jewelry_logo.png\", width=250)  # Add a jewelry store logo\n","st.title(\"ðŸ’Ž Jewelry Price Prediction App\")\n","st.write(\"Upload jewelry details and get an estimated price instantly!\")\n","\n","# ---- Sidebar Inputs ----\n","st.sidebar.header(\"Jewelry Attributes\")\n","category = st.sidebar.selectbox(\"Category\", [\"Necklace\", \"Ring\", \"Bracelet\", \"Earring\"])\n","brand_id = st.sidebar.number_input(\"Brand ID\", min_value=1, max_value=100, step=1)\n","target_gender = st.sidebar.selectbox(\"Target Gender\", [\"Male\", \"Female\", \"Unisex\"])\n","main_color = st.sidebar.selectbox(\"Main Color\", [\"Gold\", \"Silver\", \"Rose Gold\"])\n","main_metal = st.sidebar.selectbox(\"Main Metal\", [\"Gold\", \"Silver\", \"Platinum\"])\n","main_gem = st.sidebar.selectbox(\"Main Gem\", [\"Diamond\", \"Ruby\", \"Sapphire\", \"None\"])\n","order_month = st.sidebar.slider(\"Order Month\", 1, 12, step=1)\n","order_day = st.sidebar.slider(\"Order Day\", 1, 31, step=1)\n","\n","# Process Input Data\n","input_data = pd.DataFrame(\n","    [[category, brand_id, target_gender, main_color, main_metal, main_gem, order_month, order_day]],\n","    columns=[\"Category\", \"Brand_ID\", \"Target_Gender\", \"Main_Color\", \"Main_Metal\", \"Main_Gem\", \"Order Month\", \"Order Day\"]\n",")\n","\n","# Button for Prediction\n","if st.sidebar.button(\"Predict Price\"):\n","    prediction = model.predict(input_data)\n","    st.success(f\"ðŸ’° Predicted Jewelry Price: **${prediction[0]:,.2f}**\")\n","\n","# ---- File Upload for Bulk Prediction ----\n","st.subheader(\"ðŸ“¤ Upload a Dataset for Bulk Prediction\")\n","uploaded_file = st.file_uploader(\"Upload a CSV or Excel file\", type=[\"csv\", \"xlsx\"])\n","if uploaded_file:\n","    df = pd.read_csv(uploaded_file) if uploaded_file.name.endswith('.csv') else pd.read_excel(uploaded_file)\n","    predictions = model.predict(df)\n","    df[\"Predicted Price\"] = predictions\n","    st.write(df)\n","\n","    # File Download Options\n","    st.download_button(\"Download Predictions (CSV)\", df.to_csv(index=False), \"predictions.csv\", \"text/csv\")\n","    st.download_button(\"Download Predictions (Excel)\", df.to_excel(index=False, engine='openpyxl'), \"predictions.xlsx\")\n","\n","# ---- Data Visualization ----\n","st.subheader(\"ðŸ“Š Jewelry Price Distribution\")\n","fig = px.histogram(df, x=\"Predicted Price\", title=\"Price Distribution\", nbins=30)\n","st.plotly_chart(fig)\n","\n","# ---- Footer ----\n","st.write(\"ðŸ”— **Developed by YourName** | [GitHub](https://github.com/YourRepo)\")\n","\n","if __name__ == \"__main__\":\n","    import os\n","    port = int(os.environ.get(\"PORT\", 8501))  # Use default Streamlit port\n","    st.run()\n"]}]}